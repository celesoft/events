[ MLNet 01 Age Classes ]

public class AgeRange
{
    [Column(ordinal: "0")]
    public string Name;

    [Column(ordinal: "1")]
    public float Age;

    [Column(ordinal: "2")]
    public string Gender;

    [Column(ordinal: "3")]
    public string Label;
}

public class AgeRangePrediction
{
    [ColumnName("PredictedLabel")]
    public string PredictedLabel;
}

[ MLNet 02 Pipeline definition AGE ]

pipeline.Add(new TextLoader(fileName).CreateFrom<AgeRange>(separator: ',', useHeader: true));
pipeline.Add(new Dictionarizer("Label"));
pipeline.Add(new ColumnConcatenator("Features", "Age"));
pipeline.Add(new StochasticDualCoordinateAscentClassifier());
pipeline.Add(new PredictedLabelColumnOriginalValueConverter {PredictedLabelColumn = "PredictedLabel" });

[ MLNet 03 Pipeline usings ]

using Microsoft.ML;
using Microsoft.ML.Data;
using Microsoft.ML.Runtime.Api;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;

[ MLNet 04 Pipeline Train ]

var model = pipeline.Train<AgeRange, AgeRangePrediction>();

[ MLNet 05 Predict ]

private static void Predict(PredictionModel<AgeRange, AgeRangePrediction> model, string name, float age, string gender)
{
    var input = new AgeRange
    {
        Age = age,
        Name = name,
        Gender = gender
    };
    var pred = model.Predict(input);
    Console.WriteLine($"Predicted label for Name {name}, Age {age}, Gender {gender}; is {pred.PredictedLabel}");
}

[ MLNet 06 Pipeline definition AGE GENDER ]

pipeline.Add(new TextLoader(fileName).CreateFrom<AgeRange>(separator: ',', useHeader: true));
pipeline.Add(new Dictionarizer("Label"));
pipeline.Add(new TextFeaturizer("Gender", "Gender"));
pipeline.Add(new ColumnConcatenator("Features", "Age", "Gender"));
pipeline.Add(new StochasticDualCoordinateAscentClassifier());
pipeline.Add(new PredictedLabelColumnOriginalValueConverter { PredictedLabelColumn = "PredictedLabel" });